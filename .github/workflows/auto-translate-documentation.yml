name: Auto-translate documentation (ja-jp)
on:
  pull_request:
    types: [closed]
    paths:
      - "docs/en-us/**/*.mdx"
      - "docs/en-us/**/*.md"
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to translate (optional - if not provided, will translate recent changes)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write
  actions: read

jobs:
  auto-translate:
    runs-on: ubuntu-latest
    # Only run if PR was merged (not just closed) OR if manually triggered
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth setup-git

      - name: Auto-translate documentation to Japanese
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          trigger_phrase: ""
          mode: "agent"
          direct_prompt: |
            A documentation PR has been merged. Please translate any English documentation changes to Japanese and create a new PR.

            ## Task
            1. First, run `git log --oneline -10` to see recent commits.
            2. Get the original PR information using `gh pr list --state merged --limit 5` or `gh pr view <PR_NUMBER>` if PR number is provided.
            3. Identify files that were changed in the merged PR in the "docs/en-us/" directory.
            4. For each changed file, create or update the corresponding Japanese translation in "docs/ja-jp/".
            5. Maintain the same directory structure and filename in the Japanese docs.
            6. Create a new branch and pull request with the translations by using the PR template.

            ## Requirements
            - Translate all English text to natural, professional Japanese.
            - Preserve all MDX/Markdown formatting exactly (headers, lists, code blocks, links).
            - Keep code examples, URLs, and technical terms in English.
            - Ensure proper UTF-8 encoding for Japanese characters.
            - Create "docs/ja-jp/" directory structure if it doesn't exist.

            ## Process
            1. Use git to identify which files were modified in the merged PR and get the PR details.
            2. Read each modified English documentation file.
            3. Create a new branch with the format "ja-jp/<ORIGINAL_PR_BRANCH_NAME_FOR_ENGLISH_PR>", using chain case (-) to separate words.
            4. Create high-quality Japanese translations.
            5. Save translations in docs/ja-jp/ with identical file structure.
            6. Commit the translations with a descriptive message.
            7. Push the branch by using: `git push origin <branch-name>`.
            8. Create a pull request by following the PR template instructions section below.

            ## PR template instructions
            When creating the pull request, follow these steps:
            1. Read the contents of `.github/pull_request_template.md` to get the base template structure.
            2. Adapt the template content for a Japanese translation PR as follows:
               - **Description:** "Japanese translation of documentation from the original English PR. This PR translates the following new documentation from English to Japanese: <LIST_FILES_IN_BULLET_FORMAT>"
               - **Related issues and/or PRs:** Include a link to the original English PR in bullet format: "- [Original English PR](ORIGINAL_PR_URL)"
               - **Changes made:** List the translated files in bullet format: "- Translated `docs/en-us/[filename]` â†’ `docs/ja-jp/[filename]`"
               - Keep the original checklist, but mark applicable items as completed.
            3. Add the following Claude usage note at the end of the PR body:
               ```
               > [!NOTE]
               >
               > This translation was automatically generated by using Claude <MODEL_NAME>. This translation required <TOKEN_COUNT> tokens to generate.
               ```
            4. Use `gh pr create` with title format "[Japanese] <ORIGINAL_TITLE_OF_THE_PR_IN_ENGLISH>" and the adapted template as the body. The title must follow sentence-style capitalization.

            ## Getting original PR information
            To get the original PR link and details:
            - If triggered by PR merge: Use `gh pr view ${{ github.event.pull_request.number }}` or the PR URL is: `https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}`
            - If manually triggered with PR number: Use `gh pr view <provided_pr_number>`
            - If manually triggered without PR number: Use `gh pr list --state merged --limit 5 --json number,title,url,mergedAt` to find recent merged PRs

            ## Claude usage tracking
            When generating translations, keep track of:
            - The Claude model being used (for example, "Claude 4 Opus", "Claude 3.5 Sonnet", "Claude 3 Haiku", etc.).
            - The approximate token count used for the translation task.
            - Include this information in the GitHub-flavored admonition note.

            IMPORTANT: Make sure to authenticate with GitHub CLI first by running the gh auth commands that are available.

            Please analyze the merged PR, create the translations, and submit a new PR automatically.
          allowed_tools: "View,Edit,Glob,Grep,Bash(git:*),Bash(mkdir:*),Bash(gh:*),Bash(cat:*)"
          timeout_minutes: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
