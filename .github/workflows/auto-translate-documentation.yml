name: Auto-Translate Documentation
on:
  pull_request:
    types: [closed]
    paths:
      - "docs/en-us/**/*.mdx"
      - "docs/en-us/**/*.md"
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to translate (optional - if not provided, will translate recent changes)'
        required: false
        type: string

permissions:
  contents: write
  pull-requests: write
  issues: write
  id-token: write
  actions: read

jobs:
  auto-translate:
    runs-on: ubuntu-latest
    # Only run if PR was merged (not just closed) OR if manually triggered
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh auth setup-git

      - name: Auto-translate documentation to Japanese
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}  # Alternative auth method - uncomment if using API key instead
          direct_prompt: |
            A documentation PR has been merged. Please translate any English documentation changes to Japanese and create a new PR.

            ## Task:
            1. First, run `git log --oneline -10` to see recent commits
            2. Identify files that were changed in the merged PR in the "docs/en-us/" directory
            3. For each changed file, create or update the corresponding Japanese translation in "docs/ja-jp/"
            4. Maintain the same directory structure and filename in the Japanese docs
            5. Create a new branch and pull request with the translations

            ## Requirements:
            - Translate all English text to natural, professional Japanese
            - Preserve all MDX/Markdown formatting exactly (headers, lists, code blocks, links)
            - Keep code examples, URLs, and technical terms in English
            - Ensure proper UTF-8 encoding for Japanese characters
            - Create "docs/ja-jp/" directory structure if it doesn't exist

            ## Process:
            1. Use git to identify which files were modified in the merged PR
            2. Read each modified English documentation file
            3. Create a new branch with the format "ja-jp/<ORIGINAL_PR_BRANCH_NAME_FOR_ENGLISH_PR>", using chain case (-) to separate words
            4. Create high-quality Japanese translations
            5. Save translations in docs/ja-jp/ with identical file structure
            6. Commit the translations with a descriptive message
            7. Push the branch using: `git push origin <branch-name>`
            8. Create a pull request using: `gh pr create --title "[Japanese] <ORIGINAL_TITLE_OF_THE_PR_IN_ENGLISH>" --body "Japanese translation of documentation from the original PR. Auto-generated translation."`

            IMPORTANT: Make sure to authenticate with GitHub CLI first by running the gh auth commands that are available.

            Please analyze the merged PR, create the translations, and submit a new PR automatically.

          allowed_tools: "View,Edit,Glob,Grep,Bash(git:*),Bash(mkdir:*),Bash(gh:*)"
          timeout_minutes: 20
